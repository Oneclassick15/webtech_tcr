{% set lab_name = 'Лабораторна 1' %}
{% extends "layouts/labs.njk" %}

{% block styles %}
  {{ super() }}
  <style>

    .modal {
      position: fixed;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background: #000b;
      z-index: 999999999999;
      visibility: hidden;
    }

    .modal .container {
      width: auto;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(.3);
      transition: transform 0.3s ease-in-out;
    }

    .modal.open {
      visibility: visible;
    }

    .modal.open .container {
      transform: translate(-50%, -50%) scale(1);
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      max-width: 500px;
    }

    form label {
      text-align: left;
    }

    form .row {
      display: flex;
      gap: 1rem;
    }

    form .row > * {
      flex: 1;
    }

    .group {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }

    form input {
      height: 40px;
      border-radius: 0.25rem;
      border: 1px solid #000;
      padding: 0 1rem;
    }

    form input:not([type=submit]):focus-visible {
      box-shadow: 0 0 0 1px #000;
    }

    form input[type=submit] {
      background: 0;
      cursor: pointer;
    }
    form input[type=submit]:hover {
      background: #000;
      color: #fff;
    }

    button {
      display: block;
      width: 100%;
      height: 40px;
      border-radius: 0.25rem;
      border: 1px solid #000;
      padding: 0 1rem;
      background: 0;
      cursor: pointer;
    }

    button:hover {
      background: #000;
      color: #fff;
    }

    @media screen and (max-width: 600px) {
      .row {
        flex-direction: column;
      }

      .modal .container {
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        transform: scale(.3);
      }

      .modal.open .container {
        transform-origin: center;
        transform: scale(1);
      }

      .modal .section-header {
        top: 0;
      }
    }
  </style>
{% endblock %}

{% block content %}
  {{ super() }}

  <section>
    <div class="container">
      <div class="section-body">
        <button id="open-modal">OPEN FORM</button>
      </div>
    </div>
  </section>

  <section class="modal">
    <div class="container">
      <div class="section-header">
        <h1 class="section-title">Modal</h1>
      </div>
      <div class="section-body" align="center">
        <form action="https://webhook.site/b9213059-62a0-4b90-b93f-e61e111ea894">
          <div class="row">
            <div class="group">
              <label for="name">Name</label>
              <input type="text" name="name" id="name" placeholder="Sirius" required>
            </div>

            <div class="group">
              <label for="surname">Surname</label>
              <input type="text" name="surname" id="surname" placeholder="Black" required>
            </div>
          </div>

          <div class="group">
            <label for="email">Email</label>
            <input type="email" name="email" id="email" placeholder="sirius@mail.com" required>
          </div>

          <div class="group">
            <label for="password">Password</label>
            <input type="password" name="password" id="password" required>
          </div>

          <div class="group">
            <label for="re_password">Repeat Password</label>
            <input type="password" name="re_password" id="re_password" required>
          </div>

          <input type="submit" value="submit">

          <button id="close-modal">CLOSE</button>
        </form>
      </div>
    </div>
  </section>
{% endblock %}

{% block scripts %}
  <script>
    const form = document.querySelector('form');
    const formAction = form.getAttribute('action');
    const password = document.querySelector('#password');
    const rePassword = document.querySelector('#re_password');

    form.addEventListener('submit', (e) => {
      e.preventDefault();

      if (password.value !== rePassword.value) {
        alert('Passwords do not match');
        return;
      }

      fetch(formAction, {
        method: 'POST',
        mode: 'no-cors',
        body: new FormData(form)
      })
        .then(() => {
          alert('Form submitted');
        })
        .catch((e) => {
          console.error(e);
          alert('Form not submitted');
        })
        . finally(() => {
          form.reset();
        })

    });

    const modal = document.querySelector('.modal');
    const openModal = document.querySelector('#open-modal');
    const closeModal = document.querySelector('#close-modal');
    window.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal
          .classList
          .remove('open');
      }
    });

    window.addEventListener("keydown", (e) => {
      console.log(e.code);
      if (e.code !== 'Escape') 
        return;
      modal
        .classList
        .remove('open');
    });

    openModal.addEventListener('click', (e) => {
      e.preventDefault();
      modal
        .classList
        .add('open');
    });
    closeModal.addEventListener('click', (e) => {
      e.preventDefault();
      modal
        .classList
        .remove('open');
    });
  </script>
{% endblock %}